#!/usr/bin/env node

process.env.DEBUG = '*'

const defer = require('golike-defer').default
const { CancelToken } = require('promise-toolbox')
const { createVhdStreamWithLength } = require('vhd-lib')

const { createClient } = require('../')

const { createInputStream, resolveRef } = require('./utils')

defer(async ($defer, args) => {
  let raw = false
  if (args[0] === '--raw') {
    raw = true
    args.shift()
  }

  if (args.length < 2) {
    return console.log('Usage: import-vdi [--raw] <XS URL> <VDI identifier> [<VHD file>]')
  }

  const xapi = createClient({
    allowUnauthorized: true,
    url: args[0],
    watchEvents: false
  })

  await xapi.connect()
  $defer(() => xapi.disconnect())

  const { cancel, token } = CancelToken.source()
  process.on('SIGINT', cancel)

  let input = createInputStream(args[2])
  if (!raw && input.length === undefined) {
    input = await createVhdStreamWithLength(input)
  }

  // https://xapi-project.github.io/xen-api/snapshots.html#uploading-a-disk-or-snapshot
  await xapi.putResource(token, input, '/import_raw_vdi/', {
    query: {
      format: raw ? 'raw' : 'vhd',
      vdi: await resolveRef(xapi, 'VDI', args[1])
    }
  })
})(process.argv.slice(2)).catch(
  console.error.bind(console, 'error')
)
